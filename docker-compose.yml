version: '3.8'

services:
  db:
    image: postgres:16
    container_name: dms_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dmsuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dmspassword}
      POSTGRES_DB: ${POSTGRES_DB:-dmsdb}
    ports:
      - "5432:5432"
    networks:
      - dms_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dms_app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - ./static:/app/static
    environment:
      FLASK_APP: run.py
      FLASK_ENV: ${FLASK_ENV:-development}
      SQLALCHEMY_DATABASE_URI: postgresql://${POSTGRES_USER:-dmsuser}:${POSTGRES_PASSWORD:-dmspassword}@db:5432/${POSTGRES_DB:-dmsdb}
      PYTHONPATH: /app
    networks:
      - dms_network

networks:
  dms_network:
    driver: bridge

volumes:
  postgres_data: